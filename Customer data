#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

--How many orders were placed in January?

SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'order ID';

--How many of those orders were for an iPhone?

SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderID) = 6;

--Select the customer account numbers for all the orders that were placed in February

SELECT distinct acctnum
FROM BIT_DB.customers
LEFT JOIN BIT_DB.FebSales
ON customers.order_id=FebSales.orderID
WHERE length(orderID) = 6;

--Which product was the cheapest one sold in January, and what was the price?

SELECT distinct product, price
FROM BIT_DB.JanSales
ORDER BY price ASC
LIMIT 1;

--Below is a more efficient query to the above question.

SELECT distinct product, price
FROM BIT_DB.JanSales
WHERE price IN(SELECT MIN(price) FROM BIT_DB.JanSales);

--What is the total revenue for each product sold in January?

SELECT distinct SUM(Quantity)*price AS revenue, product
FROM BIT_DB.JanSales
GROUP BY product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT 
SUM(Quantity),
product,
SUM(Quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?


SELECT
COUNT(distinct cust.acctnum),
AVG(Quantity*price)
FROM BIT_DB.FebSales AS feb
LEFT JOIN BIT_DB.customers AS cust
ON feb.orderID = cust.order_id
WHERE feb.quantity > 2
AND length(orderID) = 6;
